version: "3.9"

services:
    app:
        build:
            context: .
            args:
                - DEV=true
        ports:
            - "8000:8000"
        volumes:
            - ./app:/app
            - dev-static-data:/vol/web
        command: >
            sh -c "python manage.py wait_for_db &&
                   python manage.py migrate &&
                   python manage.py runserver 0.0.0.0:8000"
        environment:
            - DB_HOST=${DB_HOST}
            - DB_NAME=${DB_NAME}
            - DB_USER=${DB_USER}
            - DB_PASS=${DB_PASS}
            - DEBUG=${DEBUG}
            
            - IMAP_HOST=${IMAP_HOST}
            - IMAP_EMAIL=${IMAP_EMAIL}
            - IMAP_PASSWORD=${IMAP_PASSWORD}

            - OPENAI_API_KEY=${OPENAI_API_KEY}

        depends_on:
            - db
            - redis
            - celery
            - celery_beat 
    db:
        image: postgres:13-alpine
        volumes:
            - dev-db-data:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

    redis:
        image: "redis:latest"
        ports:
            - "6379:6379"
        command: redis-server --bind 0.0.0.0

    celery:
        build: .
        depends_on:
            - redis
        command: celery -A job worker -l info

    celery_beat:
        build:
            context: .
        command: celery -A job beat -l info
        volumes:
            - ./app:/app
        depends_on:
            - redis
            - celery
        environment:
            - CELERYBEAT_CHDIR=${CELERYBEAT_CHDIR}

volumes:
    dev-db-data:
    dev-static-data:
